<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.teamProject.syusyu.productMapper">
    <!--카테고리별 상품 리스트 출력    -->
    <select id="selectProductList" parameterType="map" resultType="ProductDTO">
        SELECT P.PROD_ID
             , P.CATE_ID
             , C.MIDDLE_NO
             , C.MIDDLE_NM
             , C.SMALL_NO
             , C.SMALL_NM
             , P.PROD_NM
             , P.MODEL_NM
             , P.BRND_ID
             , B.BRND_NM
             , PRC.SALE_PRC
             , PRC.DC_PER /* 할인율 */
             , GET_DC_PRC(PRC.SALE_PRC, PRC.DC_PER) AS DC_PRC /* 할인가 */
             , P.REP_IMG
             , P.STATUS
             , PRC.SALE_ST_DTTM
             , PRC.SALE_ED_DTTM
             , PRC.DC_ST_DTTM
             , PRC.DC_ED_DTTM
             , P.REG_DTTM
             , P.REGR_ID
             , COALESCE(ASR.AVG_STAR_RATING, 0) AS AVG_STAR_RATING
             , COALESCE(ASR.REVW_CNT, 0) AS REVW_CNT
        FROM PRODUCT P
                JOIN CATEGORY C ON P.CATE_ID = C.CATE_ID
                JOIN BRAND B ON P.BRND_ID = B.BRND_ID
                JOIN PRICE PRC ON P.PROD_ID = PRC.PROD_ID
                LEFT JOIN (SELECT prod_id,
                                  ROUND(AVG(STAR_RATING), 1) AS AVG_STAR_RATING,
                                  COUNT(REVW_NO) AS REVW_CNT
                            FROM review
                            GROUP BY prod_id) AS ASR ON P.PROD_ID = ASR.prod_id
        WHERE P.STATUS = 601 /* 판매중 */
          AND P.DEL_YN = 'N'
          AND (C.MIDDLE_NM, C.SMALL_NM) IN (SELECT MIDDLE_NM,
                                                   SMALL_NM
                                            FROM CATEGORY SC
                                            WHERE MIDDLE_NO = #{middleNo}
                                            AND SMALL_NO = #{smallNo})
        <choose>
            <when test="sort == 'newArrival'">
                ORDER BY P.REG_DTTM DESC
            </when>
            <when test="sort == 'discount'">
                ORDER BY PRC.DC_PER DESC
            </when>
            <when test="sort == 'lowPrice'">
                ORDER BY PRC.SALE_PRC ASC
            </when>
            <when test="sort == 'highPrice'">
                ORDER BY PRC.SALE_PRC DESC
            </when>
            <when test="sort == 'popularity'">
                ORDER BY P.VW_CNT DESC
            </when>
            <when test="sort == 'reviewCount'">
                ORDER BY ASR.REVW_CNT DESC
            </when>
            <when test="sort == 'ratingCount'">
                ORDER BY ASR.AVG_STAR_RATING DESC
            </when>
            <when test="sort == null">
                ORDER BY P.REG_DTTM DESC
            </when>
        </choose>
    </select>
    <!--중분류에 따른 전체 상품 리스트-->
    <select id="selectProductAllList" parameterType="int" resultType="ProductDTO">
        SELECT P.PROD_ID
             , P.CATE_ID
             , C.MIDDLE_NO
             , C.MIDDLE_NM
             , C.SMALL_NO
             , C.SMALL_NM
             , P.PROD_NM
             , P.MODEL_NM
             , P.BRND_ID
             , B.BRND_NM
             , PRC.SALE_PRC
             , PRC.DC_PER /* 할인율 */
             , GET_DC_PRC(PRC.SALE_PRC, PRC.DC_PER) AS DC_PRC /* 할인가 */
             , P.REP_IMG
             , P.STATUS
             , PRC.SALE_ST_DTTM
             , PRC.SALE_ED_DTTM
             , PRC.DC_ST_DTTM
             , PRC.DC_ED_DTTM
             , P.REG_DTTM
             , P.REGR_ID
             , COALESCE(ASR.AVG_STAR_RATING, 0)                                   AS AVG_STAR_RATING
             , COALESCE(ASR.REVW_CNT, 0)                                          AS REVW_CNT
             , GET_BUY_CNT(P.PROD_ID) AS BUY_CNT
        FROM PRODUCT P
                 JOIN CATEGORY C ON P.CATE_ID = C.CATE_ID
                 JOIN BRAND B ON P.BRND_ID = B.BRND_ID
                 JOIN PRICE PRC ON P.PROD_ID = PRC.PROD_ID
                 LEFT JOIN (SELECT prod_id,
                                   ROUND(AVG(STAR_RATING), 1) AS AVG_STAR_RATING,
                                   COUNT(REVW_NO)             AS REVW_CNT
                            FROM review
                            GROUP BY prod_id) AS ASR ON P.PROD_ID = ASR.prod_id
        WHERE P.STATUS = 601 /* 판매중 */
          AND P.DEL_YN = 'N'
          AND (C.MIDDLE_NM, C.SMALL_NM) IN (SELECT MIDDLE_NM,
                                                   SMALL_NM
                                            FROM CATEGORY SC
                                            WHERE MIDDLE_NO = #{middleNo})
        <choose>
            <when test="sort == 'newArrival'">
                ORDER BY P.REG_DTTM DESC
            </when>
            <when test="sort == 'discount'">
                ORDER BY PRC.DC_PER DESC
            </when>
            <when test="sort == 'lowPrice'">
                ORDER BY PRC.SALE_PRC ASC
            </when>
            <when test="sort == 'highPrice'">
                ORDER BY PRC.SALE_PRC DESC
            </when>
            <when test="sort == 'popularity'">
                ORDER BY P.VW_CNT DESC
            </when>
            <when test="sort == 'reviewCount'">
                ORDER BY ASR.REVW_CNT DESC
            </when>
            <when test="sort == 'ratingCount'">
                ORDER BY ASR.AVG_STAR_RATING DESC
            </when>
            <when test="sort == 'buyCount'">
                ORDER BY BUY_CNT DESC
            </when>
            <when test="sort == null">
                ORDER BY P.REG_DTTM DESC
            </when>
        </choose>
    </select>

    <select id="selectProductStatus" parameterType="int" resultType="ProductDTO">
        SELECT PROD_ID, STATUS
        FROM PRODUCT
        WHERE PROD_ID IN
        <foreach collection="array" item="prodIdArr" open="(" close=")" separator=",">
            #{prodIdArr}
        </foreach>
    </select>
    <select id="selectProduct" parameterType="int" resultType="ProductDTO">
        SELECT P.PROD_ID
             , P.CATE_ID
             , C.MIDDLE_NO
             , C.MIDDLE_NM
             , C.SMALL_NO
             , C.SMALL_NM
             , P.PROD_NM
             , P.MODEL_NM
             , P.BRND_ID
             , B.BRND_NM
             , P.RLES_DT
             , P.PROD_DTL_DESC
             , P.DLV_CHG_DTL
             , PRC.SALE_PRC
             , PRC.DC_PER /* 할인율 */
             , TRUNCATE(PRC.SALE_PRC - (PRC.SALE_PRC * (PRC.DC_PER / 100)), -1) AS DC_PRC /* 할인가 */
             , P.REP_IMG
             , P.MFGD_MATR /* 제품소재 */
             , GET_CD_NM('PR001', P.MFTCO)                                      AS MFTCO_NM
             , P.MFTCO /* 제조사 */
             , GET_CD_NM('MC001', P.MFT_NATN)                                   AS MFT_NATN_NM
             , P.MFT_NATN /*제조국*/
             , P.STATUS
             , GET_CD_NM('P0002', P.STATUS)                                     AS STATUS_NM
             , P.VW_CNT
             , PRC.SALE_ST_DTTM
             , PRC.SALE_ED_DTTM
             , PRC.DC_ST_DTTM
             , PRC.DC_ED_DTTM
             , P.REG_DTTM
             , COALESCE(ASR.AVG_STAR_RATING, 0)                                 AS AVG_STAR_RATING
             , COALESCE(ASR.REVW_CNT, 0)                                        AS REVW_CNT
        FROM PRODUCT P
                 JOIN CATEGORY C ON P.CATE_ID = C.CATE_ID
                 JOIN BRAND B ON P.BRND_ID = B.BRND_ID
                 JOIN PRICE PRC ON P.PROD_ID = PRC.PROD_ID
                 LEFT JOIN (SELECT prod_id,
                                   ROUND(AVG(STAR_RATING), 1) AS AVG_STAR_RATING,
                                   COUNT(REVW_NO)
                                                              AS REVW_CNT
                            FROM review
                            GROUP BY prod_id) AS ASR ON P.PROD_ID = ASR.prod_id
        WHERE P.STATUS
            = 601 /* 판매중 */
          AND P.DEL_YN = 'N'
          AND P.DSPY_YN = 'Y'
          AND P.PROD_ID = ${prodId}
    </select>

    <select id="selectMftNatnList" resultType="ProductDTO">
        SELECT CODE
             , CD_NM
        FROM COMM_CODE
        WHERE CD_TP = 'MC001'
    </select>
    <select id="selectMftcoList" resultType="ProductDTO">
        SELECT CODE
             , CD_NM
        FROM COMM_CODE
        WHERE CD_TP = 'PR001'
    </select>

    <insert id="insertProduct" parameterType="ProductDTO" useGeneratedKeys="true" keyProperty="prodId">
        INSERT INTO PRODUCT ( CATE_ID
                            , PROD_NM
                            , MODEL_NM
                            , BRND_ID
                            , RLES_DT
                            , DLV_CHG_DTL
                            , PROD_DTL_DESC
                            , MFGD_MATR
                            , MFTCO
                            , MFT_NATN
                            , REP_IMG
                            , STATUS
                            , REGR_ID)
        VALUES (#{cateId}
               , #{prodNm}
               , #{modelNm}
               , #{brndId}
               , #{rlesDt}
               , #{dlvChgDtl}
               , #{prodDtlDesc}
               , #{mfgdMatr}
               , #{mftco}
               , #{mftNatn}
               , #{repImg}
               , #{status}
               , #{regrId})
    </insert>

    <select id="selectProductBosList" parameterType="SearchConditionDTO" resultType="ProductDTO">
        SELECT P.PROD_ID
             , P.PROD_NM
             , P.PROD_DTL_DESC
             , P.STATUS
             , GET_CD_NM('P0002', P.STATUS)
             , P.DSPY_YN
             , (SELECT SUM(INV_QTY) FROM PROD_OPT WHERE PROD_ID = P.PROD_ID) AS TOT_QTY
             , PRC.BUY_PRC
             , PRC.SALE_PRC
             , PRC.DC_PER
             , GET_DC_PRC(PRC.SALE_PRC, PRC.DC_PER) AS DC_PRC
             , P.DLV_CHG_DTL
             , GET_BUY_CNT(P.PROD_ID) AS BUY_CNT
             , GET_TOT_PNT(P.PROD_ID) AS POINT
             , GET_TOT_PRC(P.PROD_ID) AS TOT_PRC
             , CATE.LARGE_NO
             , CATE.LARGE_NM
             , CATE.MIDDLE_NO
             , CATE.MIDDLE_NM
             , CATE.SMALL_NO
             , CATE.SMALL_NM
             , P.MODEL_NM
             , P.BRND_ID
             , BRND.BRND_NM
             , BRND.BRND_KO_NM
             , P.MFGD_MATR
             , P.MFTCO
             , GET_CD_NM('PR001', P.MFTCO)
             , P.MFT_NATN
             , GET_CD_NM('MC001', P.MFT_NATN)
             , P.VW_CNT
             , P.REG_DTTM
             , P.REGR_ID
             , P.UPD_DTTM
             , P.UPDR_ID
             , P.DEL_DTTM
             , P.DERT_ID
             , P.DEL_YN
             , PRC.SALE_ST_DTTM
             , PRC.SALE_ED_DTTM
             , PRC.DC_ST_DTTM
             , PrC.DC_ED_DTTM
        FROM PRODUCT P
                 JOIN PRICE PRC on P.PROD_ID = PRC.PROD_ID
                 JOIN CATEGORY CATE ON P.CATE_ID = CATE.CATE_ID
                 JOIN BRAND BRND on BRND.BRND_ID = P.BRND_ID
        WHERE 1=1
        <if test="dateType != null and startDate != null and endDate != null">
            AND P.${dateType} BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="searchKeyword != null and searchKeyword != ''">
            AND P.${searchType} LIKE CONCAT('%', #{searchKeyword}, '%')
        </if>
        <if test="statusList != null and statusList.size() > 0">
            AND P.STATUS IN
            <foreach collection="statusList" item="status" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        <if test="largeNm != null and largeNm != '-대분류-'">
            AND CATE.LARGE_NM = #{largeNm}
        </if>
        <if test="middleNm != null and middleNm != '-중분류-'">
            AND CATE.MIDDLE_NM = #{middleNm}
        </if>
        <if test="smallNm != null and smallNm != '-소분류-'">
            AND CATE.SMALL_NM = #{smallNM}
        </if>
        ORDER BY P.PROD_ID DESC
    </select>





</mapper>

